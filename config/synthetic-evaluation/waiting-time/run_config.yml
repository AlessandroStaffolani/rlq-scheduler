---

global:
  features_enabled:
    waiting_time: true
    execution_time: event  # possible values ["event", "result"]
    context: false
    agent_type:
      name: double-dqn  # for available agents see agents_parameters in agent.yml config file
      policy: NULL  # necessary only for multi-armed-bandit agent
    expandable_pool: false
    bootstrapping: true
    trajectory_saving: false
    evaluation: false
    google_traces_mode: false
    google_traces_time_multiplier: 20  # in the dataset 1 second is equivalent to 1 days, use the multiplier to rescale the value
    replicas_normalization: true  # use the number of replicas to normalize the pool load feature

  save_properties:
    run_name_prefix: waiting-time
    checkpoint_frequency: 20000
    saving_mode: final-model  # available: "best-checkpoint" or "final-model"

  penalties:
    out_of_budget: -100
    task_failed: -1000

  functions:
    execution_cost:
      type: value-based  # available types ["value-based", "market-based"]
      train_data: data/cloud-providers-cost.csv
    reward_function:
      type: waiting-time  # available types ["waiting-time, "execution-time", "execution-cost", "makespan", "total-cost"]
      extra_parameters: {}

  state:
    features:
      task_class_type:
        type: array
        is_dummy: true
        values: task_classes
        is_worker_related: false
        is_global: true
      pool_load:
        type: array
        is_dummy: false
        values: worker_classes
        is_worker_related: false
        is_global: true
    time_window: 30

  context:
    features:
      task_class_type:
        type: array
        is_dummy: true
        values: task_classes
        is_worker_related: false
        is_global: true
      pool_load:
        type: array
        is_dummy: false
        values: worker_classes
        is_worker_related: false
        is_global: true
      action:
        type: array
        is_dummy: true
        values: worker_classes
        is_worker_related: false
        is_global: false

task_generator:
  random_seed: 2
  bootstrapping:
    skip: 0
    distribution: poisson_fixed
    tasks_to_generate: 1000
    rate_per_interval: 60
    rate_per_interval_range:
      - 5
      - 16  # not inclusive
  tasks_to_generate:
    - skip: 0  # skip task generation for the first `skip` tasks
      distribution: poisson_fixed  # possible value ["none", "poisson_fixed", "poisson_variable"]
      tasks_to_generate: 4000  # how many tasks generate in total
      rate_per_interval: 60  # tasks generated every interval, if distribution is "none" this value is ignored
      rate_per_interval_range:  # discrete uniform distribution range used to compute the rate_per_interval for every interval in the "poisson_variable" distribution case
        - 5
        - 16  # not inclusive

agent:
  global:
    action_space:  # the action space will be recomputed based on the worker classes available
      - worker_class_1
      - worker_class_2
      - worker_class_3
      - worker_class_4
      - worker_class_5
      - worker_class_6
    load_model_config:
      load: false
      path: NULL
    reward_multiplier:
      value: 1
      limit: NULL
    save_model_config:
      enabled: true
      folder: models
    train: true
    random_seed: 4

  agents_parameters:
    random:
      name: Random
    lin-ucb:
      delta: 1
    double-dqn:
      experience_replay_capacity: 5000
      learning_rate: 0.001
      gamma: 0.99
      batch_size: 64
      target_net_update_frequency: 128
      epsilon:
        type: linear-decay  # type can be ['scalar', 'linear-decay', 'exp-decay'] if scalar: parameters contains only 'value': <float>, if linear-decay: parameters contains: 'start': <float>, 'end': <float>, 'total': <int> if exp-decay: parameters contains: 'start': <float>, 'end': <float>, 'decay': <float>
        parameters:
          end: 0.01
          start: 0.65
          total: 2000
      optimizer: adam  # available optimizers: ['adam'], default: adam
      network_config:
        type: fully-connected # available: ['fully-connected', 'fc-diamond']
        parameters:
          hidden_layers: 3

    lru: {}

    e-pvm:
      alpha: 1.5

task_classes:
  cpu_task_small:
    func_name: cpu_task
    full_name: "rlq_scheduler.tasks.tasks.cpu_task"
    waiting_cost: 1
    constraints:
      wait:
        max: 120  # expressed in seconds
        penalty: -10000
      execution:
        max: 5  # expressed in seconds
        penalty: -10000
    parameters_range:
      n:
        min: 1
        max: 5
      d:
        min: 40
        max: 60
  cpu_task_medium:
    func_name: cpu_task
    full_name: "rlq_scheduler.tasks.tasks.cpu_task"
    waiting_cost: 1
    constraints:
      wait:
        max: 120  # expressed in seconds
        penalty: -10000
      execution:
        max: 15  # expressed in seconds
        penalty: -10000
    parameters_range:
      n:
        min: 3
        max: 8
      d:
        min: 50
        max: 80
  ram_and_cpu_task_small:
    func_name: ram_and_cpu_task
    full_name: "rlq_scheduler.tasks.tasks.ram_and_cpu_task"
    waiting_cost: 1
    constraints:
      wait:
        max: 120  # expressed in seconds
        penalty: -10000
      execution:
        max: 8  # expressed in seconds
        penalty: -10000
    parameters_range:
      n:
        min: 1
        max: 5
      d:
        min: 40
        max: 60
  ram_and_cpu_task_medium:
    func_name: ram_and_cpu_task
    full_name: "rlq_scheduler.tasks.tasks.ram_and_cpu_task"
    waiting_cost: 1
    constraints:
      wait:
        max: 120  # expressed in seconds
        penalty: -10000
      execution:
        max: 15  # expressed in seconds
        penalty: -10000
    parameters_range:
      n:
        min: 3
        max: 8
      d:
        min: 50
        max: 80
  disk_task_small:
    func_name: disk_task
    full_name: "rlq_scheduler.tasks.tasks.disk_task"
    waiting_cost: 1
    constraints:
      wait:
        max: 120  # expressed in seconds
        penalty: -10000
      execution:
        max: 12  # expressed in seconds
        penalty: -10000
    parameters_range:
      n:
        min: 35
        max: 50
  disk_task_medium:
    func_name: disk_task
    full_name: "rlq_scheduler.tasks.tasks.disk_task"
    waiting_cost: 1
    constraints:
      wait:
        max: 120  # expressed in seconds
        penalty: -10000
      execution:
        max: 25  # expressed in seconds
        penalty: -10000
    parameters_range:
      n:
        min: 40
        max: 80
  disk_and_computation_task_small:
    func_name: disk_and_computation_task
    full_name: "rlq_scheduler.tasks.tasks.disk_and_computation_task"
    waiting_cost: 1
    constraints:
      wait:
        max: 120  # expressed in seconds
        penalty: -10000
      execution:
        max: 8  # expressed in seconds
        penalty: -10000
    parameters_range:
      n:
        min: 2
        max: 6
      d:
        min: 40
        max: 60
  disk_and_computation_task_medium:
    func_name: disk_and_computation_task
    full_name: "rlq_scheduler.tasks.tasks.disk_and_computation_task"
    waiting_cost: 1
    constraints:
      wait:
        max: 120  # expressed in seconds
        penalty: -10000
      execution:
        max: 13  # expressed in seconds
        penalty: -10000
    parameters_range:
      n:
        min: 3
        max: 10
      d:
        min: 50
        max: 80

worker_classes:
  worker_class_1:
    cost_config:
      cost_external: 2.76
      cost_internal: 0.85
  worker_class_2:
    cost_config:
      cost_external: 3.86
      cost_internal: 1.93
  worker_class_3:
    cost_config:
      cost_external: 6.44
      cost_internal: 3.22
  worker_class_4:
    cost_config:
      cost_external: 5.88
      cost_internal: 2.94
  worker_class_5:
    cost_config:
      cost_external: 8.4
      cost_internal: 4.02
  worker_class_6:
    cost_config:
      cost_external: 10.24
      cost_internal: 5.12