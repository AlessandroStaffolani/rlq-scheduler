apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: flower-svc
    app.kubernetes.io/instance: service
    app.kubernetes.io/component: flower
    app.kubernetes.io/part-of: backbone
  name: flower-svc
spec:
  ports:
  - name: http
    protocol: TCP
    port: 5555
    targetPort: 5555
    nodePort: 30555
  selector:
    app.kubernetes.io/part-of: backbone
    app.kubernetes.io/name: flower
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: flower
    app.kubernetes.io/instance: deployment
    app.kubernetes.io/component: flower
    app.kubernetes.io/part-of: backbone
  name: flower
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: flower
      app.kubernetes.io/instance: deployment
      app.kubernetes.io/component: flower
      app.kubernetes.io/part-of: backbone
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flower
        app.kubernetes.io/instance: deployment
        app.kubernetes.io/component: flower
        app.kubernetes.io/part-of: backbone
    spec:
      initContainers:
        - name: init-redis
          image: cloud.canister.io:5000/ale8193/busybox
          command: ['sh', '-c', "until nslookup redis.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for redis service; sleep 2; done"]
      containers:
      - image: mher/flower:0.9.5 # cloud.canister.io:5000/ale8193/flower
        name: flower
        ports:
          - name: http
            protocol: TCP
            containerPort: 5555
        command: ["flower", "--broker=redis://redis.default:6379/1"]
#        env:
#          - name: BROKER_SERVICE_SERVICE_HOST
#            value: redis.default
#          - name: CELERY_REDIS_DB
#            value: "1"
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
      imagePullSecrets:
        - name: docker-registry