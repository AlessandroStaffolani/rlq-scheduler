apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: notebook-svc
    app.kubernetes.io/instance: service
    app.kubernetes.io/component: notebook
    app.kubernetes.io/part-of: backbone
  name: notebook-svc
  namespace: notebook
spec:
  ports:
  - name: http
    protocol: TCP
    port: 8888
    targetPort: 8888
    nodePort: 30888
  selector:
    app.kubernetes.io/part-of: backbone
    app.kubernetes.io/name: notebook
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: notebook-data
  namespace: notebook
  labels:
    app.kubernetes.io/name: notebook-data
    app.kubernetes.io/instance: pvc
    app.kubernetes.io/component: notebook
    app.kubernetes.io/part-of: backbone
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: notebook
    app.kubernetes.io/instance: deployment
    app.kubernetes.io/component: notebook
    app.kubernetes.io/part-of: backbone
  name: notebook
  namespace: notebook
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: notebook
      app.kubernetes.io/instance: deployment
      app.kubernetes.io/component: notebook
      app.kubernetes.io/part-of: backbone
  template:
    metadata:
      labels:
        app.kubernetes.io/name: notebook
        app.kubernetes.io/instance: deployment
        app.kubernetes.io/component: notebook
        app.kubernetes.io/part-of: backbone
    spec:
      containers:
      - image: cloud.canister.io:5000/ale8193/notebook-all
        imagePullPolicy: Always
        name: notebook
        ports:
          - name: http
            protocol: TCP
            containerPort: 8888
        # command: ["jupyter", "notebook", "--no-browser", "--ip=0.0.0.0", "--notebook-dir=/usr/src/jupyter", "--allow-root"]
        envFrom:
          - secretRef:
              name: minio-secret
          - configMapRef:
              name: minio-config
          - configMapRef:
              name: mongo-config
          - secretRef:
              name: mongo-secret
        volumeMounts:
          - name: data
            mountPath: /usr/src/jupyter/local
            readOnly: false
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: notebook-data
      imagePullSecrets:
        - name: docker-registry